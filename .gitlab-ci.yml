variables:
  projectname: "Deploy CloverDX Server - Windows"
  fileincludeglob: "**/**"

stages:
  - main

image: 
  name: registry.gitlab.com/filevine/technology/project/filevine-platform/docker-gitlab-runner-linux/master:latest

default:
  tags:
    - internal
    - linux

deploy-branch:
  stage: main
  script:
    - |
      pwsh -c '
        gitversion /diag
        Import-Module ./etc/New-CloverAssetsPackage.ps1
        $manifest = Import-PowershellDataFile -Path clover-assets-manifest.psd1
        New-CloverAssetsPackage -DependancyManifest $manifest
        $gitversion = gitversion | convertfrom-json
        $gitversion
        $nupkgversion = ${gitversion}.MajorMinorPatch + "-" + ${gitversion}.PreReleaseLabel
        $nupkgversion
        $releaseversion = ${gitversion}.SemVer + "+" + ${gitversion}.ShortSha + "." + $env:CI_PIPELINE_IID
        $releaseversion
        Remove-Item -Recurse -Force .git/
        octo pack --id="cloverdx-windows" --version="${nupkgversion}" --include="terraform/"
        octo pack --id="clover-assets" --version="${nupkgversion}" --include="clover-assets/"
        octo pack --id="workernode_backup" --version="${nupkgversion}" --include="workernode_backup/"
        octo push --package="cloverdx-windows.${nupkgversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo push --package="clover-assets.${nupkgversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo push --package="workernode_backup.${nupkgversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"

        octo create-release --project="CloverDX Meta Backup" `
                            --space="MigrateTech-CloverDX" `
                            --package workernode_backup:${nupkgversion} `
                            --packageVersion="${nupkgversion}" `
                            --version="${releaseversion}" `
                            --ignoreExisting

        octo create-release --project="Deploy CloverDX Infrastructure" `
                            --space="MigrateTech-CloverDX" `
                            --package cloverdx-windows:${nupkgversion} `
                            --version="${releaseversion}" `
                            --ignoreExisting

        octo create-release --project="Deploy CloverDX Assets" `
                            --space="MigrateTech-CloverDX" `
                            --package clover-assets:${nupkgversion} `
                            --packageVersion="${nupkgversion}" `
                            --version="${releaseversion}" `
                            --ignoreExisting
      '
  except:
    - master
    - tags

deploy-master:
  stage: main
  script:
    - |
      pwsh -c '
        gitversion /diag
        Import-Module ./etc/New-CloverAssetsPackage.ps1
        $manifest = Import-PowershellDataFile -Path clover-assets-manifest.psd1
        New-CloverAssetsPackage -DependancyManifest $manifest
        gitversion
        $gitversion = (gitversion | convertfrom-json).SemVer
        Remove-Item -Recurse -Force .git/
        octo pack --id="cloverdx-windows" --version="${gitversion}" --include="terraform/"
        octo pack --id="clover-assets" --version="${gitversion}" --include="clover-assets/"
        octo pack --id="workernode_backup" --version="${gitversion}" --include="workernode_backup/"
        octo push --package="cloverdx-windows.${gitversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo push --package="clover-assets.${gitversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo push --package="workernode_backup.${gitversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo create-release --project="CloverDX Meta Backup" --space="MigrateTech-CloverDX" --package workernode_backup:${gitversion} --packageVersion="${gitversion}" --version="${gitversion}" --ignoreExisting
        octo create-release --project="Deploy CloverDX Assets" --space="MigrateTech-CloverDX" --package clover-assets:${gitversion} --packageVersion="${gitversion}" --version="${gitversion}" --ignoreExisting
        octo create-release --project="Deploy CloverDX Infrastructure" --space="MigrateTech-CloverDX" --package cloverdx-windows:${gitversion} --packageVersion="${gitversion}" --version="${gitversion}" --ignoreExisting
        octo create-release --project="Deploy CloverDX Single Step" --space="MigrateTech-CloverDX"
      '
  only:
    - master
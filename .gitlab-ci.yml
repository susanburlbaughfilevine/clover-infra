variables:
  projectname: "Deploy CloverDX Server - Windows"
  fileincludeglob: "**/**"

stages:
  - build
  - octopus-pack
  - octopus-push

image: 
  name: registry.gitlab.com/filevine/technology/project/filevine-platform/docker-gitlab-runner-linux/master:latest

default:
  tags:
    - internal
    - linux

build:
  stage: build
  script:
    - |
      pwsh -c '
        Write-Output "Remove the Git Directory (causes issues)"
        Remove-Item -Recurse -Force .git/
        Import-Module ./etc/New-CloverAssetsPackage.ps1
        $manifest = Import-PowershellDataFile -Path clover-assets-manifest.psd1
        New-CloverAssetsPackage -DependancyManifest $manifest
        '
  artifacts:
    paths:
      - "./"
    expire_in:
      12 hours

pack-master:
  stage: octopus-pack
  script:
    - |
      pwsh -c '
        dir
        $gitversion = (gitversion | convertfrom-json).SemVer
        Write-Output "Remove the Git Directory (causes issues)"
        Remove-Item -Recurse -Force .git/
        octo version
        octo pack --id="cloverdx-windows" --version="${gitversion}" --include="${fileincludeglob}"
        '
  artifacts:
    paths:
      - "*nupkg"
    expire_in:
      60 minutes
  only:
    - master

push-master:
  stage: octopus-push
  script:
      pwsh -c '
        $gitversion = (gitversion | convertfrom-json).SemVer
        octo version
        octo push --package="cloverdx-windows.${gitversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo create-release --project="${projectname}" --space="MigrateTech-CloverDX" --packageVersion="${gitversion}" --version="${gitversion}" --ignoreExisting'
  only:
    - master

pack-branch:
  stage: octopus-pack
  script:
    - |
      pwsh -c '
        gitversion
        $gitversion = gitversion | convertfrom-json
        $gitbranchkey = ((${gitversion}.BranchName).split("/")[1]).replace("_","-")
        $nupkgversion = ${gitversion}.MajorMinorPatch + "-" + ${gitversion}.PreReleaseLabel
        $releaseversion = ${gitversion}.SemVer + "+" + ${gitversion}.ShortSha + "." + $env:CI_PIPELINE_IID
        Write-Output "Remove the Git Directory (causes issues)"
        Remove-Item -Recurse -Force .git/
        octo version
        octo pack --id="cloverdx-windows" --version="${nupkgversion}" --include="**/**"
        octo pack --id="clover-assets" --version="${nupkgversion}" --include="clover-assets.zip"'
  artifacts:
    paths:
      - "*nupkg"
    expire_in:
      60 minutes
  except:
    - master
    - tags

push-branch:
  stage: octopus-push
  script:
    - |
      pwsh -c '
        $gitversion = gitversion | convertfrom-json
        $gitbranchkey = ((${gitversion}.BranchName).split("/")[1]).replace("_","-")
        $nupkgversion = ${gitversion}.MajorMinorPatch + "-" + ${gitversion}.PreReleaseLabel
        $releaseversion = ${gitversion}.SemVer + "+" + ${gitversion}.ShortSha + "." + $env:CI_PIPELINE_IID
        octo version
        ls -la
        octo push --package="cloverdx-windows.${nupkgversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        octo push --package="clover-assets.${nupkgversion}.nupkg" --space="MigrateTech-CloverDX" --overwrite-mode="OverwriteExisting"
        # Also create release for Clover Assets project
        octo create-release --project="Deploy CloverDX Assets - Windows" --space="MigrateTech-CloverDX" --package clover-assets:${nupkgversion} --packageVersion="${nupkgversion}" --version="${releaseversion}" --ignoreExisting
        octo create-release --project="Deploy CloverDX Server - Windows" --space="MigrateTech-CloverDX" --packageVersion="${nupkgversion}" --package="Deploy a Release:Deploy CloverDX Assets - Windows:${releaseversion}" --version="${releaseversion}" --ignoreExisting'
  except:
    - master
    - tags
